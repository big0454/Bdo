// ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
const TelegramBot = require('node-telegram-bot-api');
const request = require('request').defaults({ jar: true });
const { v4: uuidv4 } = require('uuid');
const fs = require('fs');
const path = require('path');
const Jimp = require('jimp');
const jsQR = require('jsqr');
const axios = require('axios');
const Tesseract = require('tesseract.js');

// ‡πÉ‡∏™‡πà‡πÇ‡∏ó‡πÄ‡∏Ñ‡∏ô‡∏ö‡∏≠‡∏ó Telegram ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
const token = '7638367708:AAFmyL5Qha1q4LIxke3Gz6STNEQ3gwJKYI8'; // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏ó‡πÄ‡∏Ñ‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏≠‡∏ó‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ 'polling' ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
const bot = new TelegramBot(token, { polling: true });

// ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤
const userSessions = {};

// ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô TrueMoney
const mobileNumber = '0951417365'; // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

// ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
let botUsername = '';
bot.getMe().then((botInfo) => {
  botUsername = botInfo.username;
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏£‡∏ô‡∏î‡∏≠‡∏° UUID
function generateUUID() {
  return uuidv4();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤ expiryTime (‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î)
function generateExpiryTime(days) {
  const now = new Date();
  const expiryDate = new Date(now.setDate(now.getDate() + days));
  return expiryDate.getTime();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢ VPS)
function login(vpsType, callback) {
  let loginOptions = {
    method: 'POST',
    url: '', // ‡∏à‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≤‡∏° vpsType
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    form: {}
  };

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î URL ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á VPS
  if (vpsType === 'xvre') {
    loginOptions.url = 'https://big-sv1.loma-studio.xyz:23572/JTmi2DRUrtXQURV/';
    loginOptions.form = {
      'username': 'bigadmin', // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ username ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
      'password': 'big040654'  // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ password ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    };
  } else {
    console.error('Unknown VPS type:', vpsType);
    callback(new Error('Unknown VPS type'));
    return;
  }

  request(loginOptions, function (error, response) {
    if (error) {
      console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö:', error);
      callback(error);
      return;
    }
    try {
      const body = JSON.parse(response.body);
      if (body.success) {
        console.log('‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', body.msg);
        callback(null); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
      } else {
        console.log('‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', body.msg);
        callback(new Error(body.msg));
      }
    } catch (e) {
      console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÑ‡∏î‡πâ:', e);
      console.log('Response Body:', response.body);
      callback(e);
    }
  });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢ VPS)
function addNewClient(session, successCallback, errorCallback) {
  const clientUUID = generateUUID();
  const expiryTime = generateExpiryTime(session.days);
  const totalGB = session.gbLimit > 0 ? session.gbLimit * 1024 * 1024 * 1024 : 0; // Convert GB to bytes

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î API URL ‡πÅ‡∏•‡∏∞ settings ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á VPS ‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
  let apiUrl = '';
  let apiSettings = {};

  if (session.vpsType === 'xvre') {
    apiUrl = 'https://big-sv1.loma-studio.xyz:23572/JTmi2DRUrtXQURV/panel';
    apiSettings = {
      clients: [{
        id: clientUUID,
        alterId: 0,
        email: session.codeName, // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡πâ‡∏á
        limitIp: 2,
        totalGB: totalGB > 0 ? totalGB : 0,
        expiryTime: expiryTime,
        enable: true,
        tgId: '',
        subId: ''
      }]
    };
  } else {
    console.error('Unknown VPS type in session:', session.vpsType);
    errorCallback('Unknown VPS type');
    return;
  }

  const options = {
    method: 'POST',
    url: apiUrl,
    headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      id: session.apiId, // ‡πÉ‡∏ä‡πâ id ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
      settings: JSON.stringify(apiSettings)
    })
  };

  request(options, function (error, response) {
    if (error) {
      console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠:', error);
      errorCallback('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠');
      return;
    }
    try {
      const body = JSON.parse(response.body);
      if (body.success) {
        console.log('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', body.msg);
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        let clientCode = '';
        if (session.vpsType === 'xvre') {
          if (session.type === 'true_pro_facebook') {
            clientCode = `vless://${clientUUID}@botvipicopc.vipv2boxth.xyz:2052?type=ws&path=%2F&host=botvipicopc.vipv2boxth.xyz&security=none#${encodeURIComponent(session.codeName)}`;
          } else if (session.type === 'ais') {
            clientCode = `vless://${clientUUID}@botvipicopc.vipv2boxth.xyz:8080?type=ws&path=%2F&host=speedtest.net&security=none#${encodeURIComponent(session.codeName)}`;
          } else if (session.type === 'true_nopro') {
            clientCode = `vless://${clientUUID}@104.18.34.21:80?type=ws&path=%2F&host=botvipicopc.vipv2boxth.xyz&security=none#${encodeURIComponent(session.codeName)}`;
          }
        }
        successCallback(clientCode, expiryTime);
      } else {
        console.log('‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', body.msg);
        errorCallback(body.msg);
      }
    } catch (e) {
      console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÑ‡∏î‡πâ:', e);
      console.log('Response Body:', response.body);
      errorCallback('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÑ‡∏î‡πâ');
    }
  });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤ TrueMoney
function processTrueMoneyGiftCode(chatId, code) {
  const options = {
    method: 'POST',
    url: `https://gift.truemoney.com/campaign/vouchers/${code}/redeem`,
    headers: {
      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)',
      'Accept': 'application/json',
      'Content-Type': 'application/json',
      'Origin': 'https://gift.truemoney.com',
      'Accept-Language': 'en-US,en;q=0.9',
      'Connection': 'keep-alive'
    },
    body: JSON.stringify({
      mobile: mobileNumber,
      voucher_hash: code
    })
  };

  request(options, function(error, response) {
    if (error) {
      console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠:', error);
      bot.sendMessage(chatId, 'üö´ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
      return;
    }

    if (response.statusCode === 200) {
      // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
      try {
        const body = JSON.parse(response.body);
        if (body && body.data && body.data.my_ticket && body.data.my_ticket.amount_baht) {
          const amount = parseFloat(body.data.my_ticket.amount_baht);
          let creditsToAdd = amount;
          if (amount === 10) {
            creditsToAdd += 4; // ‡πÄ‡∏ï‡∏¥‡∏° 10 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å 4 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
          }
          bot.sendMessage(chatId, `‚úÖ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${amount} ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ${creditsToAdd} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‡∏Ñ‡∏£‡∏±‡∏ö üôè`);
          // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
          updateUserCredits(chatId, creditsToAdd);
        } else {
          bot.sendMessage(chatId, 'üö´ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô');
        }
      } catch (e) {
        console.error('Error parsing response:', e);
        bot.sendMessage(chatId, 'üö´ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
      }

    } else {
      console.log('Response:', response.body);
      bot.sendMessage(chatId, 'üö´ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    }
  });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
let usersData = {};

// ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
const dataFilePath = path.join(__dirname, 'transactions.json');

// ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
if (fs.existsSync(dataFilePath)) {
  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
  try {
    const data = fs.readFileSync(dataFilePath, 'utf8');
    usersData = JSON.parse(data);
  } catch (err) {
    console.error('Error reading transactions.json:', err);
    usersData = {};
  }
} else {
  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏û‡∏ö ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≠‡∏ö‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ß‡πà‡∏≤‡∏á
  usersData = {};
  fs.writeFileSync(dataFilePath, JSON.stringify(usersData, null, 2));
}

function getUserData(userId) {
  return usersData[userId] || { credits: 0, codes: [] };
}

function saveUserData(userId, data) {
  usersData[userId] = data;
  fs.writeFile(dataFilePath, JSON.stringify(usersData, null, 2), (err) => {
    if (err) {
      console.error(`Error writing ${dataFilePath}:`, err);
    }
  });
}

function updateUserCredits(chatId, amount) {
  const userId = chatId.toString();
  let userData = getUserData(userId);
  let currentCredits = userData.credits || 0;

  // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ 1 ‡∏ö‡∏≤‡∏ó = 1 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï, ‡πÄ‡∏ï‡∏¥‡∏° 10 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡∏Å 4 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
  const newCredits = currentCredits + amount;

  userData.credits = newCredits;
  saveUserData(userId, userData);

  bot.sendMessage(chatId, `üí∞ ‡∏¢‡∏≠‡∏î‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ ${newCredits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï`);
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
const adminIds = [123456789]; // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ Telegram ID ‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô

// ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /start ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
bot.onText(/\/start(?:\s+(.*))?/, (msg, match) => {
  const chatId = msg.chat.id;
  const args = match[1];
  
  if (args === 'topup') {
    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô TrueMoney gift code
    const userIdStr = msg.from.id.toString();
    let userData = getUserData(userIdStr);

    // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô
    const message = `üí≥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n\n` +
                    `üîñ ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡∏ô: \n- ‡πÄ‡∏ï‡∏¥‡∏° 1 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö 1 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n- ‡πÄ‡∏ï‡∏¥‡∏° 10 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö 14 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n\n` +
                    `üì• ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: https://gift.truemoney.com/campaign/?v=xxxxx`;
    bot.sendMessage(chatId, message);
  } else {
    const message = 'ü§ñ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ö‡∏≠‡∏ó‡∏™‡∏∏‡∏î‡∏•‡πâ‡∏≥! ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:\n\n' +
                    'üí† /addclient - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà\n' +
                    'üí∞ /topup - ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n' +
                    'üí≥ /mycredits - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì\n' +
                    'üìù /mycodes - ‡∏î‡∏π‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏£‡πâ‡∏≤‡∏á\n\n' +
                    'üìå ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /topup ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô';
    bot.sendMessage(chatId, message);
  }
});

// ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /topup ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
bot.onText(/\/topup/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;

  if (msg.chat.type === 'private') {
    // ‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
    const message = 'üí≥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤‡∏ß‡∏≠‡πÄ‡∏•‡∏ó‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì!\n\nüì• ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: https://gift.truemoney.com/campaign/?v=xxxxx\n\nüîñ ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡∏ô: \n- ‡πÄ‡∏ï‡∏¥‡∏° 1 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö 1 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n- ‡πÄ‡∏ï‡∏¥‡∏° 10 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö 14 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï';
    bot.sendMessage(chatId, message);
  } else {
    // ‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
    const options = {
      reply_markup: {
        inline_keyboard: [
          [{ text: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó', url: `https://t.me/${botUsername}?start=topup` }]
        ]
      }
    };
    const message = `‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó\n\nüîñ ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡∏ô: \n- ‡πÄ‡∏ï‡∏¥‡∏° 1 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö 1 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n- ‡πÄ‡∏ï‡∏¥‡∏° 10 ‡∏ö‡∏≤‡∏ó ‡∏£‡∏±‡∏ö 14 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï`;
    bot.sendMessage(chatId, message, options);
  }
});

// ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /mycredits
bot.onText(/\/mycredits/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id.toString();
  let userData = getUserData(userId);
  let credits = userData.credits || 0;
  bot.sendMessage(chatId, `üí∞ ‡∏¢‡∏≠‡∏î‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ ${credits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï`);
});

// ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /mycodes
bot.onText(/\/mycodes/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id.toString();
  let userData = getUserData(userId);
  if (userData.codes && userData.codes.length > 0) {
    let response = 'üìú ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏î‡∏±‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:\n';
    const nowTime = Date.now();
    userData.codes.forEach((codeEntry, index) => {
      if (codeEntry.expiryTime > nowTime) {
        const daysRemaining = Math.ceil((codeEntry.expiryTime - nowTime) / (24 * 60 * 60 * 1000));
        response += `üîπ ${index + 1}. ${codeEntry.codeName} - ${codeEntry.code} - ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏µ‡∏Å ${daysRemaining} ‡∏ß‡∏±‡∏ô\n`;
      } else {
        response += `üîπ ${index + 1}. ${codeEntry.codeName} - ${codeEntry.code} - ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß\n`;
      }
    });
    bot.sendMessage(chatId, response);
  } else {
    bot.sendMessage(chatId, '‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏î‡πÜ');
  }
});

// ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /givecredits ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
bot.onText(/\/givecredits/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  if (adminIds.includes(userId)) {
    const options = {
      reply_markup: {
        inline_keyboard: [
          [{ text: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', callback_data: 'givecredits_to_user' }],
          [{ text: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á', callback_data: 'givecredits_to_self' }]
        ]
      }
    };
    bot.sendMessage(chatId, 'üîß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:', options);
  } else {
    bot.sendMessage(chatId, 'üö´ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
  }
});

// ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /allcodes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
bot.onText(/\/allcodes/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  if (adminIds.includes(userId)) {
    let response = 'üìÑ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:\n';
    for (let uid in usersData) {
      if (usersData[uid].codes && usersData[uid].codes.length > 0) {
        response += `üë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ${uid}:\n`;
        const nowTime = Date.now();
        usersData[uid].codes.forEach((codeEntry, index) => {
          if (codeEntry.expiryTime > nowTime) {
            const daysRemaining = Math.ceil((codeEntry.expiryTime - nowTime) / (24 * 60 * 60 * 1000));
            response += ` - ${codeEntry.codeName}: ${codeEntry.code} - ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏µ‡∏Å ${daysRemaining} ‡∏ß‡∏±‡∏ô\n`;
          } else {
            response += ` - ${codeEntry.codeName}: ${codeEntry.code} - ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß\n`;
          }
        });
      }
    }
    bot.sendMessage(chatId, response);
  } else {
    bot.sendMessage(chatId, 'üö´ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
  }
});

// ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /addclient
bot.onText(/\/addclient/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  const designatedGroupId = -1002344075247; // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ Chat ID ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
  if (chatId === designatedGroupId) {
    // ‡∏™‡πà‡∏á‡∏õ‡∏∏‡πà‡∏° '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å VPS' ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏Å‡πá‡∏ö message_id
    const options = {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üöÄ xvre VPS', callback_data: 'vps_xvre' }],
          [{ text: 'üåê idc VPS', callback_data: 'vps_idc' }]
        ]
      }
    };
    bot.sendMessage(chatId, 'üîß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á VPS ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ:', options).then(sentMessage => {
      // ‡πÄ‡∏Å‡πá‡∏ö chatId ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô session
      if (!userSessions[userId]) {
        userSessions[userId] = {};
      }
      userSessions[userId].chatId = chatId;
      userSessions[userId].originalMessageId = sentMessage.message_id;
    });
  } else {
    bot.sendMessage(chatId, '‚ö†Ô∏è ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
  }
});

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
bot.on('callback_query', (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const userId = callbackQuery.from.id;
  const data = callbackQuery.data;
  const messageId = callbackQuery.message.message_id;

  if (data === 'vps_xvre' || data === 'vps_idc') {
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á VPS ‡πÉ‡∏ô session
    const vpsType = data === 'vps_xvre' ? 'xvre' : 'idc';
    if (!userSessions[userId]) userSessions[userId] = {};
    userSessions[userId].vpsType = vpsType;

    // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏≤‡∏° VPS ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const profileOptions = {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üöÄ TRUE PRO Facebook', callback_data: 'profile_true_pro_facebook' }],
          [{ text: 'üì± AIS', callback_data: 'profile_ais' }],
          [{ text: 'üîß TRUE NOPRO', callback_data: 'profile_true_nopro' }]
        ]
      }
    };
    bot.editMessageText('üîç ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:', {
      chat_id: chatId,
      message_id: messageId
    }).then(() => {
      bot.sendMessage(chatId, 'üîç ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:', profileOptions).then(sentMessage => {
        userSessions[userId].originalMessageId = sentMessage.message_id;
      });
    }).catch((error) => {
      console.error('Error editing message:', error);
    });
  }
  else if (data === 'profile_true_pro_facebook' || data === 'profile_ais' || data === 'profile_true_nopro') {
    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    let apiId;
    let profileType;

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î apiId ‡πÅ‡∏•‡∏∞ profileType ‡∏ï‡∏≤‡∏° VPS Type ‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
    if (userSessions[userId].vpsType === 'xvre') {
      if (data === 'profile_true_pro_facebook') {
        apiId = 4;
        profileType = 'true_pro_facebook';
      } else if (data === 'profile_ais') {
        apiId = 3;
        profileType = 'ais';
      } else if (data === 'profile_true_nopro') {
        apiId = 2;
        profileType = 'true_nopro';
      }
    } else if (userSessions[userId].vpsType === 'idc') {
      if (data === 'profile_true_pro_facebook') {
        apiId = 12;
        profileType = 'true_pro_facebook';
      } else if (data === 'profile_ais') {
        apiId = 9;
        profileType = 'ais';
      } else if (data === 'profile_true_nopro') {
        apiId = 7;
        profileType = 'true_nopro';
      }
    }

    userSessions[userId].step = 'ask_code_name';
    userSessions[userId].type = profileType; // ‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
    userSessions[userId].apiId = apiId;

    // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏õ‡πá‡∏ô 'üìù ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì'
    bot.editMessageText('üìù ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì', {
      chat_id: chatId,
      message_id: messageId
    }).then(() => {
      // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ messageId ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    }).catch((error) => {
      console.error('Error editing message:', error);
    });
  }
  else if (data === 'givecredits_to_user') {
    if (adminIds.includes(userId)) {
      userSessions[userId] = { step: 'givecredits_ask_user' };
      bot.sendMessage(chatId, 'üîç ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ');
    } else {
      bot.answerCallbackQuery(callbackQuery.id, 'üö´ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
    }
  } else if (data === 'givecredits_to_self') {
    if (adminIds.includes(userId)) {
      userSessions[userId] = { step: 'givecredits_ask_amount', targetUserId: userId };
      bot.sendMessage(chatId, 'üí∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á');
    } else {
      bot.answerCallbackQuery(callbackQuery.id, 'üö´ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
    }
  }
});

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const text = msg.text;

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
  if (msg.new_chat_members) {
    msg.new_chat_members.forEach((newMember) => {
      if (newMember.id !== bot.id) { // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
        const welcomeMessage = `üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì ${newMember.first_name} ‡∏™‡∏π‡πà‡∏Å‡∏•‡∏∏‡πà‡∏°!\n\nü§ñ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ö‡∏≠‡∏ó‡∏™‡∏∏‡∏î‡∏•‡πâ‡∏≥! ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:\n\n` +
                               `üí† /addclient - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà\n` +
                               `üí∞ /topup - ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n` +
                               `üí≥ /mycredits - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì\n` +
                               `üìù /mycodes - ‡∏î‡∏π‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏£‡πâ‡∏≤‡∏á\n\n` +
                               `üìå ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /topup ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô`;
        bot.sendMessage(chatId, welcomeMessage);
      }
    });
    return; // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
  }

  // ‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤
  if (userSessions[userId]) {
    const session = userSessions[userId];

    if (session.step === 'ask_code_name') {
      // ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î
      session.codeName = text;
      session.step = 'ask_days';
      bot.sendMessage(chatId, 'üìÖ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (1-30 ‡∏ß‡∏±‡∏ô)').then(sentMessage => {
        session.daysMessageId = sentMessage.message_id;
      });
    } else if (session.step === 'ask_days') {
      const days = parseInt(text);
      if (isNaN(days) || days <= 0 || days > 30) {
        bot.sendMessage(chatId, '‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (1-30 ‡∏ß‡∏±‡∏ô)')
          .then((sentMessage) => {
            // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            setTimeout(() => {
              bot.deleteMessage(chatId, sentMessage.message_id).catch((error) => {
                console.error('Error deleting invalid days message:', error);
              });
            }, 6000);
          })
          .catch((error) => {
            console.error('Error sending invalid days message:', error);
          });
      } else {
        session.days = days;
        session.expiryTime = generateExpiryTime(days); // ‡πÄ‡∏Å‡πá‡∏ö expiryTime ‡πÉ‡∏ô session
        session.step = 'ask_gb_limit';
        bot.sendMessage(chatId, 'üíæ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ GB ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå 0)').then(sentMessage => {
          session.gbMessageId = sentMessage.message_id;
        });
      }
    } else if (session.step === 'ask_gb_limit') {
      const gbLimit = parseInt(text);
      if (isNaN(gbLimit) || gbLimit < 0) {
        bot.sendMessage(chatId, '‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô GB ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á')
          .then((sentMessage) => {
            // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            setTimeout(() => {
              bot.deleteMessage(chatId, sentMessage.message_id).catch((error) => {
                console.error('Error deleting invalid GB limit message:', error);
              });
            }, 6000);
          })
          .catch((error) => {
            console.error('Error sending invalid GB limit message:', error);
          });
      } else {
        session.gbLimit = gbLimit;
        session.step = 'creating_code';

        // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
        bot.sendAnimation(chatId, 'https://i.imgur.com/CiAYAcN.gif', {
          caption: '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...',
          parse_mode: 'Markdown'
        }).then((loadingMessage) => {
          session.loadingMessageId = loadingMessage.message_id;

          // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 4 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
          setTimeout(() => {
            const userIdStr = userId.toString();
            let userData = getUserData(userIdStr);
            let currentCredits = userData.credits || 0;

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î
            const requiredCredits = session.days; // 1 ‡∏ß‡∏±‡∏ô = 1 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï

            if (currentCredits >= requiredCredits) {
              // ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
              login(session.vpsType, (loginError) => {
                if (loginError) {
                  bot.sendMessage(chatId, 'üö´ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á')
                    .then((sentMessage) => {
                      // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                      setTimeout(() => {
                        bot.deleteMessage(chatId, sentMessage.message_id).catch((error) => {
                          console.error('Error deleting login error message:', error);
                        });
                      }, 6000);
                    })
                    .catch((error) => {
                      console.error('Error sending login error message:', error);
                    });
                  // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
                  if (session.loadingMessageId) {
                    bot.deleteMessage(chatId, session.loadingMessageId).catch((error) => {
                      console.error('Error deleting loading message:', error);
                    });
                  }
                  delete userSessions[userId];
                  return;
                }

                addNewClient(session, (clientCode, expiryTime) => {
                  // ‡∏™‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
                  sendCodeToUser(userId, chatId, clientCode, session, msg, expiryTime);

                  // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
                  if (session.loadingMessageId) {
                    bot.deleteMessage(chatId, session.loadingMessageId).catch((error) => {
                      console.error('Error deleting loading message:', error);
                    });
                  }

                  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                  bot.sendMessage(chatId, '‚úÖ ‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡πâ‡∏ß! ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì üì¨');

                  delete userSessions[userId];
                }, (errorMsg) => {
                  bot.sendMessage(chatId, 'üö´ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î: ' + errorMsg)
                    .then((sentMessage) => {
                      // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                      setTimeout(() => {
                        bot.deleteMessage(chatId, sentMessage.message_id).catch((error) => {
                          console.error('Error deleting error message:', error);
                        });
                      }, 6000);
                    })
                    .catch((error) => {
                      console.error('Error sending error message:', error);
                    });
                  // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
                  if (session.loadingMessageId) {
                    bot.deleteMessage(chatId, session.loadingMessageId).catch((error) => {
                      console.error('Error deleting loading message:', error);
                    });
                  }
                  delete userSessions[userId];
                });
              });
            } else {
              bot.sendMessage(chatId, `‚ö†Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ ${currentCredits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ${requiredCredits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /topup`)
                .then((sentMessage) => {
                  // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                  setTimeout(() => {
                    bot.deleteMessage(chatId, sentMessage.message_id).catch((error) => {
                      console.error('Error deleting insufficient credits message:', error);
                    });
                    // ‡∏•‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤
                    delete userSessions[userId];
                  }, 6000);
                })
                .catch((error) => {
                  console.error('Error sending insufficient credits message:', error);
                });

              // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô
              if (session.loadingMessageId) {
                setTimeout(() => {
                  bot.deleteMessage(chatId, session.loadingMessageId).catch((error) => {
                    console.error('Error deleting loading message:', error);
                  });
                }, 6000);
              }

              return; // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
            }
          }, 4000); // ‡∏£‡∏≠ 4 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
        }).catch((error) => {
          console.error('Error sending loading animation:', error);
          bot.sendMessage(chatId, 'üö´ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á')
            .then((sentMessage) => {
              // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
              setTimeout(() => {
                bot.deleteMessage(chatId, sentMessage.message_id).catch((error) => {
                  console.error('Error deleting loading message error:', error);
                });
              }, 6000);
            })
            .catch((error) => {
              console.error('Error sending loading message error:', error);
            });
          delete userSessions[userId];
        });
      }
    } else if (session.step === 'givecredits_ask_user') {
      if (msg.reply_to_message && msg.reply_to_message.from) {
        const targetUserId = msg.reply_to_message.from.id;
        session.targetUserId = targetUserId;
        session.step = 'givecredits_ask_amount';
        bot.sendMessage(chatId, 'üí∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ');
      } else {
        bot.sendMessage(chatId, '‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ')
          .then((sentMessage) => {
            // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            setTimeout(() => {
              bot.deleteMessage(chatId, sentMessage.message_id).catch((error) => {
                console.error('Error deleting ask to reply message:', error);
              });
            }, 6000);
          })
          .catch((error) => {
            console.error('Error sending ask to reply message:', error);
          });
      }
    } else if (session.step === 'givecredits_ask_amount') {
      const amount = parseInt(text);
      if (isNaN(amount) || amount <= 0) {
        bot.sendMessage(chatId, '‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á')
          .then((sentMessage) => {
            // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            setTimeout(() => {
              bot.deleteMessage(chatId, sentMessage.message_id).catch((error) => {
                console.error('Error deleting invalid amount message:', error);
              });
            }, 6000);
          })
          .catch((error) => {
            console.error('Error sending invalid amount message:', error);
          });
      } else {
        const targetUserId = session.targetUserId.toString();
        let targetUserData = getUserData(targetUserId);
        let currentCredits = targetUserData.credits || 0;
        targetUserData.credits = currentCredits + amount;
        saveUserData(targetUserId, targetUserData);

        bot.sendMessage(chatId, `‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ${targetUserId} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÅ‡∏•‡πâ‡∏ß`)
          .then((sentMessage) => {
            // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            setTimeout(() => {
              bot.deleteMessage(chatId, sentMessage.message_id).catch((error) => {
                console.error('Error deleting credit added message:', error);
              });
            }, 6000);
          })
          .catch((error) => {
            console.error('Error sending credit added message:', error);
          });

        if (targetUserId !== userId.toString()) {
          // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
          bot.sendMessage(targetUserId, `üí∞ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÄ‡∏û‡∏¥‡πà‡∏° ${amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï ‡∏à‡∏≤‡∏Å‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô`)
            .catch((error) => {
              console.error('Error notifying target user:', error);
            });
        }
        delete userSessions[userId];
      }
    }
  } else if (msg.chat.type === 'private') {
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß

    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤ TrueMoney
    if (msg.text && msg.text.includes('https://gift.truemoney.com/campaign/?v=')) {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const codeMatch = msg.text.match(/v=([a-zA-Z0-9]+)/);
      if (codeMatch && codeMatch[1]) {
        const code = codeMatch[1];

        // ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô
        processTrueMoneyGiftCode(chatId, code);
      } else {
        bot.sendMessage(chatId, '‚ö†Ô∏è ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÇ‡∏õ‡∏£‡∏î‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤‡∏ß‡∏≠‡πÄ‡∏•‡∏ó‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á')
          .then((sentMessage) => {
            // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            setTimeout(() => {
              bot.deleteMessage(chatId, sentMessage.message_id).catch((error) => {
                console.error('Error deleting invalid gift code link message:', error);
              });
            }, 6000);
          })
          .catch((error) => {
            console.error('Error sending invalid gift code link message:', error);
          });
      }
    }

    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏•‡∏¥‡∏õ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£
    if (msg.text && msg.text.startsWith('/topup_bank')) {
      // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏•‡∏¥‡∏õ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£
      const chatId = msg.chat.id;
      const userIdStr = userId.toString();

      bot.sendMessage(chatId, 'üìÑ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏™‡∏•‡∏¥‡∏õ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï');
      // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ô session
      if (!userSessions[userId]) userSessions[userId] = {};
      userSessions[userId].step = 'topup_bank_upload_slip';
    }

    // ‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£
    if (userSessions[userId] && userSessions[userId].step === 'topup_bank_upload_slip') {
      if (msg.photo) {
        const photo = msg.photo[msg.photo.length - 1];
        bot.getFile(photo.file_id).then(fileInfo => {
          const fileUrl = `https://api.telegram.org/file/bot${token}/${fileInfo.file_path}`;

          // ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û
          axios({
            url: fileUrl,
            method: 'GET',
            responseType: 'arraybuffer'
          }).then(async (response) => {
            const imagePath = path.join(__dirname, `slip_${userId}_${Date.now()}.png`);
            fs.writeFileSync(imagePath, Buffer.from(response.data, 'binary'));

            // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏™‡∏•‡∏¥‡∏õ
            const processingMsg = await bot.sendMessage(chatId, '‚åõ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏™‡∏•‡∏¥‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...');

            // ‡∏≠‡πà‡∏≤‡∏ô QR Code
            const qrCodeData = await readQrCode(imagePath);
            if (!qrCodeData) {
              bot.sendMessage(chatId, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö QR Code ‡πÉ‡∏ô‡∏†‡∏≤‡∏û ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ QR Code ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô');
              fs.unlinkSync(imagePath);
              delete userSessions[userId];
              return;
            }

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡∏ã‡πâ‡∏≥
            const slipsPath = path.join(__dirname, 'slips.json');
            let processedSlips = {};
            if (fs.existsSync(slipsPath)) {
              try {
                const data = fs.readFileSync(slipsPath, 'utf8');
                processedSlips = JSON.parse(data);
              } catch (error) {
                console.error('Error reading slips.json:', error);
              }
            }
            if (processedSlips[qrCodeData]) {
              bot.sendMessage(chatId, '‚ö†Ô∏è ‡∏™‡∏•‡∏¥‡∏õ‡∏ô‡∏µ‡πâ‡πÄ‡∏Ñ‡∏¢‡∏ñ‡∏π‡∏Å‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏™‡∏•‡∏¥‡∏õ‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ');
              fs.unlinkSync(imagePath);
              delete userSessions[userId];
              return;
            }

            // ‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û‡∏™‡∏•‡∏¥‡∏õ‡∏î‡πâ‡∏ß‡∏¢ OCR
            const amount = await extractAmount(imagePath);
            if (!amount) {
              bot.sendMessage(chatId, '‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏™‡∏•‡∏¥‡∏õ‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤');
              fs.unlinkSync(imagePath);
              delete userSessions[userId];
              return;
            }

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡∏ú‡πà‡∏≤‡∏ô API
            const requiredReceiverPhone = '020289478925'; // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏£‡∏¥‡∏á
            const requiredReceiverName = '‡∏ß‡∏£‡∏≤‡∏†‡∏£‡∏ì‡πå ‡∏î‡∏µ‡∏®‡∏£‡∏µ'; // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏£‡∏¥‡∏á
            const checkResult = await checkSlip(qrCodeData, amount, requiredReceiverPhone, requiredReceiverName);
            if (checkResult.error) {
              bot.sendMessage(chatId, `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${checkResult.error}`);
              fs.unlinkSync(imagePath);
              delete userSessions[userId];
              return;
            }

            const transactionData = checkResult.data;

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏•‡∏¥‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (!isToday(transactionData.transDate)) {
              const today = formatThaiDate(new Date());
              const slipDate = formatThaiDate(new Date(transactionData.transDate));
              
              bot.sendMessage(chatId, 
                `‚ùå *‡∏™‡∏•‡∏¥‡∏õ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ*\n\n` +
                `üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: *${today}*\n` +
                `üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏™‡∏•‡∏¥‡∏õ: *${slipDate}*\n\n` +
                `‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô`
              );
              fs.unlinkSync(imagePath);
              delete userSessions[userId];
              return;
            }

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
            if (transactionData.receiver.account.value !== requiredReceiverPhone || 
                transactionData.receiver.displayName !== requiredReceiverName) {
              bot.sendMessage(chatId, 
                `‚ùå *‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á*\n\n` +
                `*‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:*\n` +
                `üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå: \`${requiredReceiverPhone}\`\n` +
                `üë§ ‡∏ä‡∏∑‡πà‡∏≠: \`${requiredReceiverName}\`\n\n` +
                `*‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏™‡∏•‡∏¥‡∏õ:*\n` +
                `üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå: \`${transactionData.receiver.account.value}\`\n` +
                `üë§ ‡∏ä‡∏∑‡πà‡∏≠: \`${transactionData.receiver.displayName}\``
              );
              fs.unlinkSync(imagePath);
              delete userSessions[userId];
              return;
            }

            // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            const successMessage = 
              `‚úÖ *‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à*\n\n` +
              `üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: *${transactionData.amount}* ‡∏ö‡∏≤‡∏ó\n` +
              `üë§ ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô: *${transactionData.sender.displayName}*\n` +
              `üì± ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô: \`${transactionData.sender.account.value}\`\n` +
              `üë§ ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö: *${transactionData.receiver.displayName}*\n` +
              `üì± ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö: \`${transactionData.receiver.account.value}\`\n` +
              `üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: *${formatThaiDate(transactionData.transDate)}*\n` +
              `‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤: *${transactionData.transTime}*`;

            bot.sendMessage(chatId, successMessage, { parse_mode: 'Markdown' });

            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏•‡∏¥‡∏õ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß
            processedSlips[qrCodeData] = {
              userId,
              ...transactionData,
              processedAt: new Date().toISOString()
            };
            fs.writeFileSync(slipsPath, JSON.stringify(processedSlips, null, 2), 'utf8');

            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
            const creditsToAdd = parseFloat(transactionData.amount);
            updateUserCredits(chatId, creditsToAdd);

            // ‡∏•‡∏ö‡∏†‡∏≤‡∏û‡∏™‡∏•‡∏¥‡∏õ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
            fs.unlinkSync(imagePath);
            bot.deleteMessage(chatId, processingMsg.message_id).catch((error) => {
              console.error('Error deleting processing message:', error);
            });

            // ‡∏•‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤
            delete userSessions[userId];
          }).catch((error) => {
            console.error('Error downloading image:', error);
            bot.sendMessage(chatId, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
            delete userSessions[userId];
          });
        }).catch((error) => {
          console.error('Error handling bank slip:', error);
          bot.sendMessage(chatId, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏™‡∏•‡∏¥‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
          delete userSessions[userId];
        });
      } else {
        bot.sendMessage(chatId, '‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏™‡∏•‡∏¥‡∏õ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï');
        // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        setTimeout(() => {
          bot.deleteMessage(chatId, msg.message_id).catch((error) => {
            console.error('Error deleting non-photo message:', error);
          });
        }, 6000);
      }
    }

  } else {
    // ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏ï‡πà‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
    if (text && !text.startsWith('/')) {
      bot.sendMessage(chatId, '‚ùì ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î')
        .then((sentMessage) => {
          // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 6 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
          setTimeout(() => {
            bot.deleteMessage(chatId, sentMessage.message_id).catch((error) => {
              console.error('Error deleting unknown command message:', error);
            });
          }, 6000);
        })
        .catch((error) => {
          console.error('Error sending unknown command message:', error);
        });
    }
  }
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
function sendCodeToUser(userId, chatId, clientCode, session, msg, expiryTime) {
  // ‡∏™‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  bot.sendMessage(userId, `‚úÖ *‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!*\n\nüì¨ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á:\n\n\`${clientCode}\``, { parse_mode: 'Markdown' })
    .then(() => {
      // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
      const userIdStr = userId.toString();
      let userData = getUserData(userIdStr);
      if (!userData.codes) {
        userData.codes = [];
      }
      userData.codes.push({
        code: clientCode,
        codeName: session.codeName,
        creationDate: new Date().toLocaleString(),
        expiryTime: expiryTime
      });
      saveUserData(userIdStr, userData);

      // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡∏±‡∏Å‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
      let requiredCredits = session.days; // 1 ‡∏ß‡∏±‡∏ô = 1 ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
      let currentCredits = userData.credits || 0;

      if (currentCredits >= requiredCredits) {
        userData.credits = currentCredits - requiredCredits;
        saveUserData(userIdStr, userData);
        bot.sendMessage(chatId, `üí∞ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏´‡∏±‡∏Å‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï ${requiredCredits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏à‡∏≤‡∏Å‡∏¢‡∏≠‡∏î‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì`);
      } else {
        bot.sendMessage(chatId, `‚ö†Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏±‡∏Å‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï (${requiredCredits} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï). ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°`);
      }

      delete userSessions[userId];
    })
    .catch((error) => {
      if (error.response && error.response.statusCode === 403) {
        // ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó
        const options = {
          reply_markup: {
            inline_keyboard: [
              [{ text: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó', url: `https://t.me/${botUsername}?start` }]
            ]
          }
        };
        const username = msg.from.username ? `@${msg.from.username}` : msg.from.first_name;
        // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
        bot.sendMessage(chatId, `${username} ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó`, options);
      } else {
        console.error('Error sending code to user:', error);
      }
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏•‡∏¥‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
function isToday(dateStr) {
    const thaiDate = new Date(new Date().toLocaleString('en-US', { timeZone: 'Asia/Bangkok' }));
    const slipDate = new Date(dateStr);
    
    return thaiDate.getDate() === slipDate.getDate() &&
           thaiDate.getMonth() === slipDate.getMonth() &&
           thaiDate.getFullYear() === slipDate.getFullYear();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
function formatThaiDate(date) {
    const thaiDate = new Date(date);
    return thaiDate.toLocaleDateString('th-TH', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡πà‡∏≤‡∏ô QR Code ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û
async function readQrCode(imagePath) {
    try {
        const image = await Jimp.read(imagePath);
        const { data, width, height } = image.bitmap;
        const uint8ClampedArray = new Uint8ClampedArray(data.buffer);
        const qrCode = jsQR(uint8ClampedArray, width, height);
        return qrCode ? qrCode.data : null;
    } catch (error) {
        console.error('Error reading QR code:', error);
        return null;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û‡∏™‡∏•‡∏¥‡∏õ‡∏î‡πâ‡∏ß‡∏¢ OCR
async function extractAmount(imagePath) {
    try {
        const image = await Jimp.read(imagePath);
        image.grayscale().contrast(1);
        const buffer = await image.getBufferAsync(Jimp.MIME_PNG);

        const { data: { text } } = await Tesseract.recognize(buffer, 'eng+tha', {
            logger: m => console.log(m.progress)
        });

        const amountPattern = /\b\d{1,3}(?:,\d{3})*(?:\.\d{2})?\b/;
        const match = text.match(amountPattern);
        return match ? match[0].replace(/,/g, '') : null;
    } catch (error) {
        console.error('Error extracting amount:', error);
        return null;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡∏ú‡πà‡∏≤‡∏ô API
async function checkSlip(ref_id, amount, requiredReceiverPhone, requiredReceiverName) {
    const API_KEY = 'chushpqw54_ugwuu';
    const BASE_URL = 'http://154.212.139.153:800/api/v1/checkslip/';

    try {
        const url = `${BASE_URL}${API_KEY}/${ref_id}/${amount}`;
        const response = await axios.get(url);
        
        if (response.status === 200) {
            return response.data.success ? response.data : { error: response.data.msg };
        }
        return { error: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö API ‡πÑ‡∏î‡πâ' };
    } catch (error) {
        console.error('Error checking slip:', error);
        return { error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö API' };
    }
}

// Launch bot ‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
bot.launch()
    .then(() => console.log('ü§ñ Bot is running...'))
    .catch(err => console.error('‚ùå Failed to start bot:', err));

// Graceful shutdown
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
